include(ExternalProject)

set(LIB_HEADER_FILE_NAME "tonclient.h")
set(LIB_HEADER_FILE "https://raw.githubusercontent.com/tonlabs/TON-SDK/master/ton_client/client/${LIB_HEADER_FILE_NAME}")
set(LIB_SOURCE_HOST "http://sdkbinaries-ws.tonlabs.io/")
set(LIB_PREFIX "tonclient_${TC_VERSION_MAJOR}")
set(LIB_DOWNLOAD_DIR ${CMAKE_BINARY_DIR}/lib)
set(LIB_ARCHIVE_EXT .gz)

function(ton_copy_lib LIB_SUFFIX LIB_FILE_NAME)
    set(LIB_FILE_PREFIX ${ARGV2})
    set(LIB_ARCHIVE_BASENAME "${LIB_PREFIX}_${LIB_SUFFIX}")
    set(LIB_ARCHIVE_NAME "${LIB_ARCHIVE_BASENAME}${LIB_ARCHIVE_EXT}")
    set(LIB_URL "${LIB_SOURCE_HOST}${LIB_ARCHIVE_NAME}")
    set(LIB_ARCHIVE "${LIB_DOWNLOAD_DIR}/${LIB_ARCHIVE_NAME}")
    set(LIB_FILE "${TC_LIB_DIR}/${LIB_FILE_NAME}")
    if (NOT EXISTS ${LIB_FILE})
        message(STATUS "Downloading ${LIB_URL} into ${LIB_ARCHIVE}")
        file(DOWNLOAD ${LIB_URL} ${LIB_ARCHIVE} TLS_VERIFY ON)
        message(STATUS "Unpacking ${LIB_ARCHIVE} into ${TC_LIB_DIR}")
        if (WIN32)
            # CMake doesn't support gzip out of the box
            execute_process(COMMAND 7z x -o${TC_LIB_DIR} ${LIB_ARCHIVE})
        else ()
            file(ARCHIVE_EXTRACT INPUT ${LIB_ARCHIVE} DESTINATION ${TC_LIB_DIR})
        endif ()
        file(RENAME ${TC_LIB_DIR}/${LIB_ARCHIVE_BASENAME} ${LIB_FILE})
    endif ()
endfunction()

if (UNIX)
    if (APPLE)
        ton_copy_lib(darwin libtonclient.dylib)
    else ()
        ton_copy_lib(linux libtonclient.so)
    endif ()
elseif (WIN32)
    ton_copy_lib(win32_lib ton_client.lib)
    ton_copy_lib(win32_dll ton_client.dll)
endif ()

file(DOWNLOAD "${LIB_HEADER_FILE}" "${TC_LIB_DIR}/${LIB_HEADER_FILE_NAME}")
